{"version":3,"sources":["Game2048.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["Game2048","len","this","arr","Array","fill","map","it","gameOver","col","r","length","row","val","compressBottom","compressTop","c","compressLeft","compressRight","seed","spaces","i","j","push","idx","Math","floor","random","console","log","join","game","Tile","bgcolor","color","content","style","backgroundColor","className","Game","props","moveDown","state","moveBottom","randomBlock","setState","moveUp","moveTop","moveLeft","moveRight","window","addEventListener","e","alert","key","board","getBoard","margin","onClick","role","fontSize","aria-label","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.846584e0.chunk.js","sourcesContent":["class Game2048 {\r\n  constructor(len = 4) {\r\n    this.arr = Array(len).fill(0).map(it => Array(len).fill(0));\r\n    this.gameOver = false;\r\n  }\r\n\r\n  compressBottom(col) {\r\n    let r = this.arr.length - 1;\r\n    for (let row = this.arr.length - 1; row >= 0; row--) {\r\n      if (this.arr[row][col] !== 0) {\r\n        let val = this.arr[row][col]\r\n        this.arr[row][col] = 0;\r\n        this.arr[r][col] = val;\r\n        r--;\r\n      }\r\n    }\r\n  }\r\n\r\n  moveBottom() {\r\n    for (let col = 0; col < this.arr.length; col++) {\r\n      this.compressBottom(col);\r\n      for (let row = this.arr.length - 1; row > 0; row--) {\r\n        if (this.arr[row][col] !== 0 && this.arr[row][col] === this.arr[row - 1][col]) {\r\n          this.arr[row][col] <<= 1;\r\n          this.arr[row - 1][col] = 0;\r\n        }\r\n      }\r\n      this.compressBottom(col);\r\n    }\r\n  }\r\n\r\n  compressTop(col) {\r\n    let r = 0;\r\n    for (let row = 0; row < this.arr.length; row++) {\r\n      if (this.arr[row][col] !== 0) {\r\n        let val = this.arr[row][col];\r\n        this.arr[row][col] = 0;\r\n        this.arr[r][col] = val;\r\n        r++;\r\n      }\r\n    }\r\n  }\r\n\r\n  moveTop() {\r\n    for (let col = 0; col < this.arr.length; col++) {\r\n      this.compressTop(col);\r\n      for (let row = 0; row < this.arr.length - 1; row++) {\r\n        if (this.arr[row][col] !== 0 && this.arr[row][col] === this.arr[row + 1][col]) {\r\n          this.arr[row][col] <<= 1;\r\n          this.arr[row + 1][col] = 0;\r\n        }\r\n      }\r\n      this.compressTop(col);\r\n    }\r\n  }\r\n\r\n  compressLeft(row) {\r\n    let c = 0;\r\n    for (let col = 0; col < this.arr.length; col++) {\r\n      if (this.arr[row][col] !== 0) {\r\n        let val = this.arr[row][col];\r\n        this.arr[row][col] = 0;\r\n        this.arr[row][c] = val;\r\n        c++;\r\n      }\r\n    }\r\n  }\r\n\r\n  moveLeft() {\r\n    for (let row = 0; row < this.arr.length; row++) {\r\n      this.compressLeft(row);\r\n      for (let col = 0; col < this.arr.length - 1; col++) {\r\n        if (this.arr[row][col] !== 0 && this.arr[row][col] === this.arr[row][col + 1]) {\r\n           this.arr[row][col] <<= 1;\r\n          this.arr[row][col + 1] = 0;\r\n        }\r\n      }\r\n      this.compressLeft(row);\r\n    }\r\n  }\r\n\r\n  compressRight(row) {\r\n    let c = this.arr.length - 1;\r\n    for (let col = this.arr.length - 1; col >= 0; col--) {\r\n      if (this.arr[row][col] !== 0) {\r\n        let val = this.arr[row][col]\r\n        this.arr[row][col] = 0;\r\n        this.arr[row][c] = val;\r\n        c--;\r\n      }\r\n    }\r\n  }\r\n\r\n  moveRight() {\r\n    for (let row = 0; row < this.arr.length ; row++) {\r\n      this.compressRight(row);\r\n      for (let col = this.arr.length - 1; col >= 0; col--) {\r\n        if (this.arr[row][col] !== 0 && this.arr[row][col] === this.arr[row][col - 1]) {\r\n          this.arr[row][col] <<= 1;\r\n          this.arr[row][col - 1] = 0;\r\n        }\r\n      }\r\n      this.compressRight(row);\r\n    }\r\n  }\r\n\r\n  randomBlock(seed = 0.3) {\r\n    let spaces = [];\r\n    for (let i = 0; i < this.arr.length; i++) {\r\n      for (let j = 0; j < this.arr.length; j++) {\r\n        if (this.arr[i][j] === 0) {\r\n          spaces.push([i, j]);\r\n        }\r\n      }\r\n    }\r\n    if (spaces.length === 0) {\r\n      this.gameOver = true;\r\n      return false;\r\n    }\r\n\r\n    let idx = Math.floor(Math.random() * spaces.length);\r\n    let [i, j] = spaces[idx];\r\n    this.arr[i][j] = Math.random() > seed ? 2 : 4;\r\n    return this.arr;\r\n  }\r\n  \r\n  getBoard() {\r\n    console.log(this.arr.join(\"\\n\"));\r\n    return this.arr;\r\n  }\r\n}\r\n\r\nexport default Game2048;","import React from \"react\";\r\nimport Game2048 from \"./Game2048\";\r\nimport \"./Game.css\";\r\n\r\nlet game = new Game2048();\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      game: game,\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.state.game.randomBlock();\r\n    this.state.game.randomBlock();\r\n    this.setState({\r\n      game\r\n    })\r\n    window.addEventListener(\"keyup\", (e) => {\r\n      if (this.state.game.gameOver) {\r\n        window.alert(\"游戏结束！\");\r\n        game = new Game2048();\r\n        game.randomBlock();\r\n        game.randomBlock();\r\n        this.setState({\r\n          game\r\n        })\r\n        return\r\n      }\r\n      if (e.key === \"ArrowDown\") {\r\n        this.moveDown();\r\n      }\r\n      if (e.key === \"ArrowUp\") {\r\n        this.moveUp();\r\n      }\r\n      if (e.key === \"ArrowLeft\") {\r\n        this.moveLeft();\r\n      }\r\n      if (e.key === \"ArrowRight\") {\r\n        this.moveRight();\r\n      }\r\n    })\r\n  }\r\n  moveDown = () => {\r\n    this.state.game.moveBottom();\r\n    this.state.game.randomBlock()\r\n    this.setState({\r\n      game\r\n    })\r\n  }\r\n  moveUp = () => {\r\n    this.state.game.moveTop();\r\n    this.state.game.randomBlock()\r\n    this.setState({\r\n      game\r\n    })\r\n  }\r\n  moveLeft = () => {\r\n    this.state.game.moveLeft();\r\n    this.state.game.randomBlock()\r\n    this.setState({\r\n      game\r\n    })\r\n  }\r\n  moveRight = () => {\r\n    this.state.game.moveRight();\r\n    this.state.game.randomBlock()\r\n    this.setState({\r\n      game\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let board = this.state.game.getBoard();\r\n    return (\r\n      <div className=\"boxWrapper\">\r\n        {\r\n          board.map((arr, idx) => {\r\n            return (\r\n              <div key={\"row\" + idx} className=\"rowWapper\">\r\n                {\r\n                  arr.map((it, idx) => <Tile style={{ margin: \"10px\" }} key={\"col\" + idx} content={it}></Tile>)\r\n                }\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n        <div onClick={this.moveDown} className=\"buttons\"><span role=\"img\" style={{ fontSize: \"30px\" }} aria-label=\"arrowdown\">⬇️</span></div>\r\n        <div onClick={this.moveUp} className=\"buttons\"><span role=\"img\" style={{ fontSize: \"30px\" }} aria-label=\"arrowup\">⬆️</span></div>\r\n        <div onClick={this.moveLeft} className=\"buttons\"><span role=\"img\" style={{ fontSize: \"30px\" }} aria-label=\"arrowleft\">⬅️</span></div>\r\n        <div onClick={this.moveRight} className=\"buttons\"><span role=\"img\" style={{ fontSize: \"30px\" }} aria-label=\"arrowright\">➡️</span></div>\r\n        <p>\r\n          tip：使用键盘方向键或点击上方按钮操作上下左右\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction Tile({ content }) {\r\n  let bgcolor;\r\n  let color;\r\n  switch (content) {\r\n    case 0:\r\n      bgcolor = \"rgb(205,193,180)\";\r\n      break;\r\n    case 2:\r\n      bgcolor = \"rgb(238,228,218)\";\r\n      color = \"rgb(120,110,101)\"\r\n      break;\r\n    case 4:\r\n      bgcolor = \"rgb(236,224,200)\";\r\n      color = \"rgb(120,110,101)\"\r\n      break;\r\n    case 8:\r\n      bgcolor = \"rgb(242,177,121)\";\r\n      color = \"rgb(249,234,222)\"\r\n      break;\r\n    case 16:\r\n      bgcolor = \"rgb(245,149,99)\";\r\n      color = \"rgb(249,234,222)\"\r\n      break;\r\n    case 32:\r\n      bgcolor = \"rgb(245,124,95)\";\r\n      color = \"rgb(249,234,222)\"\r\n      break;\r\n    case 64:\r\n      bgcolor = \"rgb(246,93,59)\";\r\n      color = \"rgb(249,234,222)\"\r\n      break;\r\n    case 128:\r\n      bgcolor = \"rgb(237,206,113)\";\r\n      color = \"rgb(249,234,222)\"\r\n      break;\r\n    case 256:\r\n      bgcolor = \"rgb(237,204,97)\";\r\n      color = \"rgb(249,234,222)\"\r\n      break;\r\n    case 512:\r\n      color = \"rgb(249,234,222)\"\r\n      bgcolor = \"rgb(236,200,80)\";\r\n      break;\r\n    case 1024:\r\n      color = \"rgb(249,234,222)\"\r\n      bgcolor = \"rgb(237,197,63)\";\r\n      break;\r\n    case 2048:\r\n      color = \"rgb(249,234,222)\"\r\n      bgcolor = \"rgb(238,205,95)\";\r\n      break;\r\n    default:\r\n      bgcolor = \"black\";\r\n      color = \"white\";\r\n      break;\r\n  }\r\n\r\n  const style = {\r\n    color: color,\r\n    backgroundColor: bgcolor,\r\n  }\r\n\r\n  return (\r\n    <div className={\"tileItem\"} style={style}>\r\n      {content !== 0 && content}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game;","import React from 'react';\nimport './App.css';\nimport Game from \"./Game\"\n\nfunction App() {\n\n  return (\n    <div>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}